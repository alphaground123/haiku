#!/usr/bin/env node

const cli = require('command-router')
    , haiku = require('../')
    , path = require('path')
    , fs = require('fs')
    , hogan = require('hogan.js')
    , pkg = require('../package.json')
    , errno = require('errno')

cli
.option('help', { alias: 'h', type: Boolean })
.on('notfound', function(){
  help('index', function(){ process.exit(1) })
})
.command('server', server)
.command('help ?:topic?', function(params){
  help(params.topic)
})
.parse(process.argv)

// # help(action)
//
// Display help for `action` defined in doc/cli/<action>.md
//
//    help('build')
//
function help(topic, callback){
  topic = topic || 'index'
  callback = callback || function(){}

  var file = path.join(__dirname, '..', 'doc', 'cli', topic + '.md')

  if (topic === 'index') return mustache(file, callback)

  console.log()


  fs.createReadStream(file, { encoding: 'utf8' })
  .on('data', console.log)
  .on('error', onerror)
  .on('end', callback)

  function onerror(err){
    if (err.code === 'ENOENT') console.error('No help for: "' + topic + '"')
    else console.error(errno.code[err.code].description)
    console.error()
    process.exit(1)
  }
}

function mustache(file, callback){
  fs.readFile(file, 'utf8', function(err, data){
    var template = hogan.compile(data)
    var context = { cwd: process.cwd()
        , version: pkg.version
        , location: path.dirname(require.resolve('../'))
        }
    var output = template.render(context)

    console.log(output)
  })
}

function server(params, options){
  if (options.help) return help('server')
}
